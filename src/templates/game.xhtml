<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html 
      PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"> 
<head>
<link type="text/css" rel="stylesheet" href="/static/game.css"></link>
<link type="text/css" rel="stylesheet" href="/static/reset.css" />
<link type="text/css" rel="stylesheet" href="/static/picture.css" />
<!-- <script type="text/javascript" src="/static/json.js"></script> -->
<!-- <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js" type="text/javascript"></script> -->
<script type="text/javascript" src="/static/jquery-1.3.2.min.js"></script> 
<script type="text/javascript" src="/static/jquery-ext.js"></script>
<script type="text/javascript" src="/_ah/channel/jsapi"></script>
<script type="text/javascript" src="/static/event.js"></script>
<script type="text/javascript" src="/static/player.jq.js"></script>
<script type="text/javascript" src="/static/board.js"></script>
<script type="text/javascript" src="/static/boardView.js"></script>
<script type="text/javascript" src="/static/actionsView.js"></script>
<script type="text/javascript">//<![CDATA[

function getCookie(name) {
    var r = document.cookie.match("\\b" + name + "=([^;]*)\\b");
    return r ? r[1] : undefined;
}


function handleLoad() {
	var boardView = new BoardView(document.getElementById("board"), 
	[
   	    {type: "settlement", element:document.getElementById("settlement-model"), center:{x:15,y:15}},
   	    {type: "city", 		 element:document.getElementById("city-model"), 	  center:{x:25,y:15}}
   	]);
	var actionsView = new ActionsView($("#actions"));
	actionsView.setBoardView(boardView);
	var errorView = new ErrorView($("#errorMessage"));
	var playerListView = new PlayerListView($("#players"));
	var diceView = new DiceView($("#diceView"));
	var playerView1 = new PlayerView($("#pp"));
	
	var board = new Board("{{token}}", {
		"board-json-url": "{{boardUrl}}",
		"player-json-url": "{{playerUrl}}",
		"action-json-url": "{{actionUrl}}",
		"reservation-json-url": "{{reservationUrl}}"
	});
	
	actionsView.setBoard(board);
	boardView.setBoard(board);
	errorView.setBoard(board);
	playerListView.setBoard(board);
	diceView.setBoard(board);
	playerView1.setBoard(board);
    
	board.load();
			    
    $("#reserveLink").click(function() {
    	var responder = controller.reserve( $('#reserveEmail').val());
    	Event.addListener(responder, "reserved", function() {
    		$('#reserveMessage').text("Sent Invitation.");
    		$('#reserveEmail').val("");
    	});
    	Event.addListener(responder, "error", function() {
    		$('#reserveMessage').text("Invitation Failed to Send.");
    	});		
    });  
}

function PlayerListItemView(playerElement) {
	this.playerElement_ = $(playerElement);
	
	this.player_ = null;
}
PlayerListItemView.prototype.setPlayer = function(player) {
	this.player_ = player;
	
	this.render();
}
	
PlayerListItemView.prototype.render = function() {	
	var span = $("<span></span>");
	span.append(this.player_.getName());
	
	this.playerElement_.append(span);	
}

function PlayerListView(playersElement) {
	this.playersElement_ = $(playersElement);
	this.board_ = null;
	this.playerListItemViews_ = null;
	this.loadListenerId_ = null;
}
PlayerListView.prototype.setBoard = function(board) {
	if(this.board_) {
		Event.removeListenerById(this.board_, "load", this.loadListenerId_);
		this.board_ = null;
		this.loadListenerId_ = null;
	}
	
	var self = this;
	this.board_ = board;
	this.loadListenerId_ = Event.addListener(this.board_, "load", function() {
		self.render();
	});
	
	this.render();
}
PlayerListView.prototype.render = function() {
	this.playersElement_.empty();
	
	var ul = $("<ul></ul>");
	this.playersElement_.append(ul);
	
	this.playerListItemViews_ = new Array();
	
	var players = this.board_.getPlayers();
	console.log("player count: " + players.length);
	
	for(var i = 0; i < players.length; i++) {
		var li = $("<li></li>");
		
		var p = players[i];
		
		var pv = new PlayerListItemView(li);
		pv.setPlayer(p);
		
		ul.append(li);
		this.playerListItemViews_.push(pv);
	}
}

function ErrorView(errorElement) {
	this.board_ = null;
	this.errorEl_ = errorElement;
	this.errorInterval_ = null;
	this.errorClearTime_ = 5000; // 5 seconds
	var self = this;
	
	this.errorListenerId_ = null;
}
ErrorView.prototype.setBoard = function(board) {
	if(this.board_) {
		Event.removeListenerById(this.board_, "error", this.errorListenerId_);
		this.board_ = null;
		this.errorListenerId_ = null;
	}
	this.board_ = board;
	var self = this;
	this.errorListenerId_ = Event.addListener(this.board_, "error", function(error) {
		self.renderError(error);
	});
}
ErrorView.prototype.renderError = function(error) {
	this.clearError();
	// for now just display the message
	this.errorEl_.append(error);
	
	var self = this;
	this.errorInterval_ = setTimeout(function() {
		self.clearError();
	}, this.errorClearTime_);
}
ErrorView.prototype.clearError = function() {
	if(this.errorInterval_) {
		clearInterval(this.errorInterval_);
		this.errorInterval_ = null;
	}
	this.errorEl_.empty();
}

function DiceView(diceElement) {
	this.diceElement_ = diceElement;
	this.board_ = null;
	this.diceRolledListenerId_ = null;
	var self = this;
	Event.addListener(this.controller_, "diceRolled", function(diceValues) {
		console.log("handling dice roll: " + diceValues.length);
		self.diceValues_ = diceValues;
		self.RenderDice();
	});
	Event.addListener(this.controller_, "loadBoard", function() {
		console.log("handling board load...");
		self.diceValues_ = self.controller_.dice_;
		self.RenderDice();
	});
}
DiceView.prototype.setBoard = function(board) {
	if(this.board_) {
		Event.removeListenerById(this.board_, "diceRolled", this.diceRolledListenerId_);
		this.board_ = null;
		this.diceRolledListenerId_ = null;		
	}
	this.board_ = board;
	var self = this;
	this.diceRolledListenerId_ = Event.addListener(this.board_, "diceRolled", function() {
		self.render();
	});
}
DiceView.prototype.render = function() {
	this.diceElement_.empty();
	
	var dice = this.board_.getDice();
	
	for(var i = 0; dice && i < dice.length; i++) {
		var d = dice[i];
		console.log("current die: " + d);
		var dieEl = $('<img src="/static/i/Dice-' + d + '.svg" alt="' + d + '" width="50" height="50"/>');
		console.log("die img: " + dieEl)
		this.diceElement_.append(dieEl);
	}
}

//]]></script>
</head>

<body onload="handleLoad()">

    <div id="toolbar">
        <a href="/">Back to Game List</a> | 
        {% ifequal color None %}
            <a href="{{joinUrl}}"><span>Join Game</span></a>
        {% else %}
        You are: <div class="player-{{ color }}" style="width:10px; height:10px; display:inline-block;"></div> {{ nick }} 
        {% endifequal %}
        
        {% if isOwner %}
        	<input id="reserveEmail" type="text" /> <a href="javascript:void(0)" id="reserveLink">Reserve</a> <span id="reserveMessage"></span>
        {% endif %}
        
        <span id="errorMessage"></span>
    </div>

    <div id="game-board">

<div id="actions">
</div>


<!--
<object id="AdobeSVG" classid="clsid:78156a80-c6a1-4bbf-8e6a-3cd390eeb4e2"> </object>
<?import namespace="svg" urn="http://www.w3.org/2000/svg" implementation="#AdobeSVG"?>
-->

<div id="diceView">
</div>

<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="100%" height="1024px">
    <g id="board"></g>
    <g id="prototypes" style="visibility:hidden;">
        <svg id="settlement-model" y="331.41016151377545" x="635">
            <g>
                <rect  width="30" height="30"
                       style="stroke: black;"/>
                <line x1="15" y1="0" x2="15" y2="30" style="stroke:black;" />
            </g>

        </svg>
        <svg id="city-model" x="325" y="158.20508075688772">
            <g>
                <rect  x="0" y="0" width="50" height="30"
                       style="stroke: black;"/>
                <line x1="15" y1="0" x2="15" y2="30" style="stroke:black;" />
                <line x1="30" y1="0" x2="30" y2="30" style="stroke:black;" />
            </g>
        </svg>
    </g>
    
   

</svg>
</div> <!-- game-board -->

<div id="players">

</div>

<div id="pp">
    <div id="pp-bg"></div>
    <div id="player-panel2">

        <div style="border-top:3px;border-bottom:3px;">
            <span id="photoCell" class="smallPhoto" style="vertical-align:middle;display:table-cell;">
              <img id="photo" src="{{imageUrl}}" alt="A picture of you"/>
            </span><span id="pp-name" style="vertical-align:middle;display:table-cell;">Player Name</span>
        </div>

        <h3>Resources</h3>
        <div id="pp-resources">
            <div class="pp-res">
                <div id="pp-res-card-sheep" class="card" title="Sheep"><div class="sheep"></div></div>
                <div id="pp-res-sheep">0</div>
            </div>
            <div class="pp-res">
                <div id="pp-res-card-wheat" class="card" title="Wheat"><div class="wheat"></div></div>
                <div id="pp-res-wheat">0</div>
            </div>
            <div class="pp-res">
                <div id="pp-res-card-wood" class="card" title="Wood"><div class="wood"></div></div>
                <div id="pp-res-wood">0</div>
            </div>
            <div class="pp-res">
                <div id="pp-res-card-rock" class="card" title="Ore"><div class="rock"></div></div>
                <div id="pp-res-rock">0</div>
            </div>
            <div class="pp-res">
                <div id="pp-res-card-clay" class="card" title="Clay"><div class="clay"></div></div>
                <div id="pp-res-clay">0</div>
            </div>
        </div>
        <h3>Bonuses</h3>
        <div id="pp-bonuses">

        </div>
    </div>
</div>

<div id="player-panel">
        <div id="player1"></div>
    
    <a href="javascript:void(0);" onclick="updatePlayer()">Update Player</a>
</div> <!-- player-panel -->

<div class="clear"></div>
<div id="footer">
    footer
</div>
</body>

</html>
