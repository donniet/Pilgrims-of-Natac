<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html 
      PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"> 
<head>
<link type="text/css" rel="stylesheet" href="/static/game.css"></link>
<link type="text/css" rel="stylesheet" href="/static/reset.css" />
<link type="text/css" rel="stylesheet" href="/static/picture.css" />
<!-- <script type="text/javascript" src="/static/json.js"></script> -->
<!-- <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js" type="text/javascript"></script> -->
<script type="text/javascript" src="/static/lib/jquery-1.6.min.js"></script> 
<script type="text/javascript" src="/static/lib/jquery-ext.js"></script>
<script type="text/javascript" src="/_ah/channel/jsapi"></script>
<script type="text/javascript" src="/static/lib/event.js"></script>
<script type="text/javascript" src="/static/model/player.js"></script>
<script type="text/javascript" src="/static/model/board.js"></script>
<script type="text/javascript" src="/static/view/boardView.js"></script>
<script type="text/javascript" src="/static/view/actionsView.js"></script>
<script type="text/javascript" src="/static/view/diceView.js"></script>
<script type="text/javascript" src="/static/view/playerListView.js"></script>
<script type="text/javascript" src="/static/view/errorView.js"></script>
<script type="text/javascript" src="/static/view/playerView.js"></script>
<script type="text/javascript" src="/static/chat.js"></script>
<script type="text/javascript">//<![CDATA[

function getCookie(name) {
    var r = document.cookie.match("\\b" + name + "=([^;]*)\\b");
    return r ? r[1] : undefined;
}

function Layout() {
	this.layoutItems_ = new Array();
	this.grabSize_ = 10;
	this.handle_ = null;
	
	var self = this;
	$(window).resize(function() { self.handleResize(); });
	$(document).ready(function() { self.handleResize(); });
	
	$(window).mousemove(function(evt) {self.handleSizeMouseMove(evt);});
}
Layout.prototype.addItem = function(element, attach, dimension, sizeable) {
	var self = this;
	var item = {element: element, attach: attach, dimension: dimension, sizeEl: sizeEl};
	
	var sizeEl = null;
	if(sizeable) {
		sizeEl = $("<div class='size-bar'/>");
		sizeEl.addClass("size-bar-attach-" + attach);
		sizeEl.css("position", "absolute");
		if(attach == "left") {
			sizeEl.css("width", this.grabSize_);
			sizeEl.css("top", 0);
			sizeEl.css("right", 0);
			sizeEl.css("height", "100%");
		}
		else if(attach == "right") {
			sizeEl.css("width", this.grabSize_);
			sizeEl.css("top", 0);
			sizeEl.css("left", 0);
			sizeEl.css("height", "100%");
		}
		else if(attach == "top") {
			sizeEl.css("height", this.grabSize_);
			sizeEl.css("left", 0);
			sizeEl.css("bottom", 0);
			sizeEl.css("width", "100%");
		}
		else if(attach == "bottom") {
			sizeEl.css("height", this.grabSize_);
			sizeEl.css("left", 0);
			sizeEl.css("top", 0);
			sizeEl.css("width", "100%");
		}
		
		element.append(sizeEl);
		
		sizeEl.mousedown(function(evt) {self.handleSizeMouseDown(evt, item); return false;});
		sizeEl.mouseup(function(evt) {self.handleSizeMouseUp(evt, item);});
		sizeEl.mousemove(function(evt) {self.handleSizeMouseMove(evt, item);});
	}
	this.layoutItems_.push(item);
}
Layout.prototype.handleSizeMouseDown = function(evt, item) {
	this.handle_ = {x:evt.clientX, y:evt.clientY, item:item};
	return false;
}
Layout.prototype.handleSizeMouseUp = function(evt, item) {
	this.handle_ = null;
}
Layout.prototype.handleSizeMouseMove = function(evt) {
	if(this.handle_) {
		var item = this.handle_.item;
		
		if(item.attach == "left") {
			var dx = evt.clientX - this.handle_.x;
			item.dimension += dx;
			this.handle_.x = evt.clientX;
		}
		else if(item.attach == "right") {
			var dx = evt.clientX - this.handle_.x;
			item.dimension -= dx;
			this.handle_.x = evt.clientX;
		}
		else if(item.attach == "bottom") {
			var dy = this.handle_.y - evt.clientY;
			item.dimension += dy;
			this.handle_.y = evt.clientY;
		}
		else if(item.attach == "top") {
			var dy = this.handle_.y - evt.clientY;
			item.dimension -= dy;
			this.handle_.y = evt.clientY;			
		}
		this.handleResize();
	}
}
Layout.prototype.handleResize = function() {
	var m = {
		"top":0,
		"right":0,
		"bottom":0,
		"left":0
	};
	for(var i = 0; i < this.layoutItems_.length; i++) {
		var li = this.layoutItems_[i];
		this.layout(li.element, li.attach, li.dimension, li.sizeEl, m);
	} 
}
Layout.prototype.layout = function(element, attach, dimension, sizeEl, margin) {
	var width = $(window).width();
	var height = $(window).height();
	
	$(element).css("position", "absolute");
	$(element).css("display", "block");
	
	switch(attach) {
	case "top":
		if(sizeEl) {
			$(sizeEl).css("bottom",0);
			$(sizeEl).css("left", 0);
			$(sizeEl).css("width", "100%");
			$(sizeEl).css("height", this.grabSize_ + "px");
		}
		$(element).css("top", margin["top"] + "px");
		$(element).css("left", margin["left"] + "px");
		$(element).css("width", (width - margin["left"] - margin["right"]) + "px");
		$(element).css("height", dimension + "px");
		margin["top"] += dimension;
		break;
	case "right": 
		if(sizeEl) {
			$(sizeEl).css("top",0);
			$(sizeEl).css("right", 0);
			$(sizeEl).css("height", "100%");
			$(sizeEl).css("width", this.grabSize_ + "px");
		}
		$(element).css("top", margin["top"] + "px");
		$(element).css("right", margin["right"] + "px");
		$(element).css("width", dimension + "px");
		$(element).css("height", (height - margin["top"] - margin["bottom"]) + "px");
		margin["right"] += dimension;
		break;
	case "bottom":
		if(sizeEl) {
			$(sizeEl).css("top",0);
			$(sizeEl).css("left", 0);
			$(sizeEl).css("width", "100%");
			$(sizeEl).css("height", this.grabSize_ + "px");
		} 
		$(element).css("bottom", margin["bottom"] + "px");
		$(element).css("left", margin["left"] + "px");
		$(element).css("width", (width - margin["left"] - margin["right"]) + "px");
		$(element).css("height", dimension + "px");
		margin["bottom"] += dimension;
		break;
	case "left":  
		if(sizeEl) {
			$(sizeEl).css("top",0);
			$(sizeEl).css("left", 0);
			$(sizeEl).css("height", "100%");
			$(sizeEl).css("width", this.grabSize_ + "px");
		} 
		$(element).css("top", margin["top"] + "px");
		$(element).css("left", margin["left"] + "px");
		$(element).css("width", dimension + "px");
		$(element).css("height", (height - margin["top"] - margin["bottom"]) + "px");
		margin["left"] += dimension;
		break;
	case "center":
		if(element.nodeName && element.nodeName == "svg") {
			element.setAttribute("width", (width - margin["left"] - margin["right"]) + "px");
			element.setAttribute("height", (height - margin["top"] - margin["bottom"]) + "px");
			$(element).css("top", margin["top"] + "px");
			$(element).css("left", margin["left"] + "px");
		}
		else {
			$(element).css("top", margin["top"] + "px");
			$(element).css("left", margin["left"] + "px");
			$(element).css("width", (width - margin["left"] - margin["right"]) + "px");
			$(element).css("height", (height - margin["top"] - margin["bottom"]) + "px");
		}
		break;
	}	
}


function handleLoad() {
	var board = new Board("{{token}}", {
		"board-json-url": "{{boardUrl}}",
		"player-json-url": "{{playerUrl}}",
		"action-json-url": "{{actionUrl}}",
		"reservation-json-url": "{{reservationUrl}}"
	});
	
	var layout = new Layout();
	
	var boardView = new BoardView(document.getElementById("board"), 
	[
   	    {type: "settlement", element:document.getElementById("settlement-model"), center:{x:15,y:15}},
   	    {type: "city", 		 element:document.getElementById("city-model"), 	  center:{x:25,y:15}}
   	]);
	boardView.setBoard(board);
	

	var diceView = new DiceView($("#diceView"));
	diceView.setBoard(board);
	
	var playerListView = new PlayerListView($("#players"));
	playerListView.setBoard(board);

	var chatview = new ChatView($("#chat"));
	chatview.setBoard(board);
	
	{% ifnotequal color None %}
	var actionsView = new ActionsView($("#actions"));
	actionsView.setBoard(board);
	actionsView.setBoardView(boardView);
	
	var errorView = new ErrorView($("#errorMessage"));
	errorView.setBoard(board);
	
	var playerView1 = new PlayerView($("#pp"));
	playerView1.setBoard(board);
	
	layout.addItem($("#toolbar"), "top", 30);
	layout.addItem($("#trade"), "left", 100, true);
	layout.addItem($("#pp"), "right", 350, true);
	layout.addItem($("#chat"), "bottom", 200, true);
	
	
	layout.addItem(document.getElementById("game-board"), "center");
	
    {% endifnotequal %}
	
	board.load();
			    
    $("#reserveLink").click(function() {
    	var responder = board.reserve( $('#reserveEmail').val());
    	Event.addListener(responder, "reserved", function() {
    		$('#reserveMessage').text("Sent Invitation.");
    		$('#reserveEmail').val("");
    	});
    	Event.addListener(responder, "error", function() {
    		$('#reserveMessage').text("Invitation Failed to Send.");
    	});		
    });  
}


$(document).ready(handleLoad);

//]]></script>
</head>

<body>

    <div id="toolbar">
        <a href="/">Back to Game List</a>
        
        {% if isOwner %}
        	<input id="reserveEmail" type="text" /> <a href="javascript:void(0)" id="reserveLink">Reserve</a> <span id="reserveMessage"></span>
        {% endif %}
        
        <span id="current-player">
        {% ifequal color None %}
            <a href="{{joinUrl}}"><span>Join Game</span></a>
        {% else %}
        You are: <div class="player-{{ color }}" style="width:10px; height:10px; display:inline-block;"></div> {{ nick }} 
        {% endifequal %}
        </span> 
        
        <span id="errorMessage"></span>
    </div>

    <div id="game-board">



<!--
<object id="AdobeSVG" classid="clsid:78156a80-c6a1-4bbf-8e6a-3cd390eeb4e2"> </object>
<?import namespace="svg" urn="http://www.w3.org/2000/svg" implementation="#AdobeSVG"?>
-->


<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="100%" height="1024px" id="svg">
    <g id="board"></g>
    <g id="prototypes" style="visibility:hidden;">
        <svg id="settlement-model" y="331.41016151377545" x="635">
            <g>
                <rect  width="30" height="30"
                       style="stroke: black;"/>
                <line x1="15" y1="0" x2="15" y2="30" style="stroke:black;" />
            </g>

        </svg>
        <svg id="city-model" x="325" y="158.20508075688772">
            <g>
                <rect  x="0" y="0" width="50" height="30"
                       style="stroke: black;"/>
                <line x1="15" y1="0" x2="15" y2="30" style="stroke:black;" />
                <line x1="30" y1="0" x2="30" y2="30" style="stroke:black;" />
            </g>
        </svg>
    </g>
    
   

</svg>
</div> <!-- game-board -->


<div id="pp">

     {% ifnotequal color None %}
     <h3>Resources</h3>
     <div id="pp-resources">
         <div class="pp-res">
             <div id="pp-res-card-sheep" class="card" title="Sheep"><div class="sheep"></div></div>
             <div id="pp-res-sheep">0</div>
         </div>
         <div class="pp-res">
             <div id="pp-res-card-wheat" class="card" title="Wheat"><div class="wheat"></div></div>
             <div id="pp-res-wheat">0</div>
         </div>
         <div class="pp-res">
             <div id="pp-res-card-wood" class="card" title="Wood"><div class="wood"></div></div>
             <div id="pp-res-wood">0</div>
         </div>
         <div class="pp-res">
             <div id="pp-res-card-rock" class="card" title="Ore"><div class="rock"></div></div>
             <div id="pp-res-rock">0</div>
         </div>
         <div class="pp-res">
             <div id="pp-res-card-clay" class="card" title="Clay"><div class="clay"></div></div>
             <div id="pp-res-clay">0</div>
         </div>
     </div>
     
     <h3>Bonuses</h3>
     <div id="pp-bonuses"></div>
     
     <h3>Developments</h3>
     <div id="pp-developments"></div>
     
     <h3>Actions</h3>
	<div id="actions"></div>
	
	{% endifnotequal %}
	<h3 id="diceView"></h3>
	
	<h3>Players</h3>
	<div id="players"></div>
</div>

<div id="chat">
</div>

<div id="trade">
</div>

</body>

</html>
